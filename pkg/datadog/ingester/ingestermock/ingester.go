// Code generated by mockery v2.6.0. DO NOT EDIT.

package ingestermock

import (
	context "context"

	"github.com/grafana/mimir-proxies/pkg/datadog/ddstructs"

	mock "github.com/stretchr/testify/mock"
)

// Ingester is an autogenerated mock type for the Ingester type
type Ingester struct {
	mock.Mock
}

// StoreCheckRun provides a mock function with given fields: ctx, checks
func (_m *Ingester) StoreCheckRun(ctx context.Context, checks ddstructs.ServiceChecks) error {
	ret := _m.Called(ctx, checks)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, ddstructs.ServiceChecks) error); ok {
		r0 = rf(ctx, checks)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StoreHostTags provides a mock function with given fields: ctx, hostname, systemTags
func (_m *Ingester) StoreHostTags(ctx context.Context, hostname string, systemTags []string) error {
	ret := _m.Called(ctx, hostname, systemTags)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, []string) error); ok {
		r0 = rf(ctx, hostname, systemTags)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StoreMetrics provides a mock function with given fields: ctx, series
func (_m *Ingester) StoreMetrics(ctx context.Context, series ddstructs.Series) error {
	ret := _m.Called(ctx, series)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, ddstructs.Series) error); ok {
		r0 = rf(ctx, series)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
