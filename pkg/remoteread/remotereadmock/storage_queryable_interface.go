// Code generated by mockery 2.9.0. DO NOT EDIT.

package remotereadmock

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	storage "github.com/prometheus/prometheus/storage"
)

// StorageQueryableInterface is an autogenerated mock type for the StorageQueryableInterface type
type StorageQueryableInterface struct {
	mock.Mock
}

// Querier provides a mock function with given fields: ctx, mint, maxt
func (_m *StorageQueryableInterface) Querier(ctx context.Context, mint int64, maxt int64) (storage.Querier, error) {
	ret := _m.Called(ctx, mint, maxt)

	var r0 storage.Querier
	if rf, ok := ret.Get(0).(func(context.Context, int64, int64) storage.Querier); ok {
		r0 = rf(ctx, mint, maxt)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(storage.Querier)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int64, int64) error); ok {
		r1 = rf(ctx, mint, maxt)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
